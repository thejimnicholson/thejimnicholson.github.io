<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Pithy Branding-Friendly Name for a Website Goes Here]]></title>
  <link href="http://thejimnicholson.github.io/atom.xml" rel="self"/>
  <link href="http://thejimnicholson.github.io/"/>
  <updated>2014-02-25T15:14:37-05:00</updated>
  <id>http://thejimnicholson.github.io/</id>
  <author>
    <name><![CDATA[Jim Nicholson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Deploying OpenVPN Part 2: Hypervisor choices]]></title>
    <link href="http://thejimnicholson.github.io/blog/2014/02/13/deploying-openvpn-part-2-hypervisor-choices/"/>
    <updated>2014-02-13T21:00:35-05:00</updated>
    <id>http://thejimnicholson.github.io/blog/2014/02/13/deploying-openvpn-part-2-hypervisor-choices</id>
    <content type="html"><![CDATA[<p>Picking a hypervisor seems to be a straightforward process. I&rsquo;ve pretty much settled on <a href="http://www.linux-kvm.org/page/Main_Page">KVM</a> as the  virtualization technology I want to use. The other possible choices would be <a href="http://www.xenproject.org/">Xen</a>, <a href="https://www.virtualbox.org/">VirtualBox</a>, or <a href="http://www.vmware.com/">VMWare</a>. Each of these has advantaged and disadvantages, and each has a &ldquo;champion&rdquo; company behind it. KVM suits me best, mostly because it is part of both major Linux distributions and I&rsquo;ve had some experience with it.</p>

<!--more-->


<p>The technology itself, however, presents some challenges. If I had a Linux desktop on my network, it would be a fairly straightforward process to install KVM on top of either Fedora, RedHat/Centos, or Ubuntu. KVM&rsquo;s primary &ldquo;management&rdquo; interface, a tool called virt-manager, can be used to configure the hypervisor and deploy new guest systems as needed. The downside of this is that I would need some place to run the tool, which proved to be daunting. I wanted to make the basic hypervisor hardware a &ldquo;headless&rdquo; system, as I can&rsquo;t justify tieing up a monitor, keyboard and mouse for a system that&rsquo;s basically going to sit in the corner of a room and never get used.</p>

<p>With this in mind, I started looking through the <a href="http://www.linux-kvm.org/page/Management_Tools">list of kvm management tools</a>. There&rsquo;s a lot to look through, but I quickly eliminated any native GUI tools, and I&rsquo;ve had enough experience (struggle?) with virsh to know that command-line tools were going to be a problem. (Command line tools are great for things you have to do over and over, but for things you&rsquo;ll do once in a while, a web-based GUI can save you a lot of trouble.)</p>

<p>After reading through the list, I narrowed my possible choices down to <a href="http://witsbits.com/">Witsbits</a> and <a href="http://pve.proxmox.com/wiki/Main_Page">Proxmox VE</a>. Both provide bare-metal installers, both give you a web interface to administrate the hypervisor, and both are free for personal use, with supported commercial offerings. Of the two, Witsbits was the easiest to install. In the next part of this series, I&rsquo;ll go into the installation in detail and discuss my experience with it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploying OpenVPN Part 1: why?]]></title>
    <link href="http://thejimnicholson.github.io/blog/2014/02/10/deploying-openvpn/"/>
    <updated>2014-02-10T13:29:22-05:00</updated>
    <id>http://thejimnicholson.github.io/blog/2014/02/10/deploying-openvpn</id>
    <content type="html"><![CDATA[<p>After years of working inside a &ldquo;walled garden,&rdquo; where I had limited access to clients and limited ability to work remotely, I&rsquo;m now a consultant working mostly on short-term projects. Some of those projects are done remotely, while others require me to be at a customer&rsquo;s location. Meanwhile, the team I&rsquo;m working with are distributed around the globe, and our &ldquo;infrastructre&rdquo; consists mostly of SaaS cloud sites and a mix of equipment sitting in various people&rsquo;s bedrooms, home offices and basements (including mine.)</p>

<!-- more -->


<p>As near as I can determine, my remote access requirements are:</p>

<ul>
<li>I need to access systems that are on my home network remotely.</li>
<li>I need to access systems that are on the team&rsquo;s network.</li>
<li>I need to be able to give other team members access to systems on my network.</li>
</ul>


<p>Additionally, I&rsquo;d like to host the infrastructure to support this using virtual machines, because that&rsquo;s how I roll.</p>

<p>One possible solution would be to run Mac OS X Server to host the VPN connections. This makes sense because my house is almost exclusively a Mac house these days, except for my occasional (and usually work-related) Linux use. The snag is that while I have some &ldquo;spare&rdquo; Mac hardware that can run OS X Server, none can be upgraded to Mavericks.</p>

<p>So the solution I&rsquo;m pursuing is to build out my home office infrastructure using Linux, following roughly this approach:</p>

<ul>
<li>Build a hypervisor to run my virtual machines</li>
<li>Install some implementation of OpenVPN on a virtual machine, preferably using a virtual appliance.</li>
<li>Configure my Airport Extreme to route VPN traffic from the internet into my OpenVPN host</li>
<li>Set up access so I can get onto my home network when I&rsquo;m not at home, via my various devices.</li>
<li>Connect my home network into the office network.</li>
</ul>


<p>I&rsquo;ll be posting more as things progress.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started]]></title>
    <link href="http://thejimnicholson.github.io/blog/2014/02/10/getting-started/"/>
    <updated>2014-02-10T11:37:54-05:00</updated>
    <id>http://thejimnicholson.github.io/blog/2014/02/10/getting-started</id>
    <content type="html"><![CDATA[<p>Another new blog? Yep, despite my reservations, I&rsquo;m determined to try this out. Actually, static site generation makes a great deal of sense considering the way blogs get hijacked these days.</p>

<p>Anyway, the first topic I&rsquo;m going to address (in my typical ADHD fashion) is VPN access. Stay tuned.</p>
]]></content>
  </entry>
  
</feed>
